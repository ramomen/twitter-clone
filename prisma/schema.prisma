// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
  // url          = "mongodb:developer:k6qr4fMVXWUukBux@6kpzvtf.mongodb.net/twitterclone/?retryWrites=true&w=majority"
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  email        String         @unique
  username     String         @unique
  name         String?
  password     String
  profileImage String?
  refreshToken RefreshToken[]
  tweets       Tweet[]
  mediaFiles   MediaFile[]
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  token     String   @unique

  user User @relation(fields: [userId], references: [id])
}

model Tweet {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Author
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  replyToId String? @db.ObjectId
  replyTo   Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Tweet[] @relation("replies")

  mediaFiles MediaFile[]
}

model MediaFile {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  url    String @unique

  tweet   Tweet?  @relation(fields: [tweetId], references: [id])
  tweetId String? @db.ObjectId
}

// developer
//k6qr4fMVXWUukBux
